"""
Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников и возвращающую словарь, в котором
ключи — первые буквы имён, а значения — списки, содержащие имена, начинающиеся с соответствующей буквы. Например:
>>> thesaurus("Иван", "Мария", "Петр", "Илья")
{
    "И": ["Иван", "Илья"],
    "М": ["Мария"],
    "П": ["Петр"]
}
Подумайте: полезен ли будет вам оператор распаковки? Как поступить, если потребуется сортировка по ключам? Можно ли
использовать словарь в этом случае?
"""


def thesaurus(*args):
    # для формирования ключей словаря вытаскиваем первые буквы имен, оставляем уникальные
    array_for_key = []
    for i in args:
        array_for_key.append(i[0])
    letter_for_key = list(set(array_for_key))
    # собираем в словарь пары ключ-значение для соответствующих букв-слов
    gloss_new = {}
    for i in args:
        for j in letter_for_key:
            if i[0] == j:
                gloss_new[j] = i
    # меняем тип значений словаря на список и добавляем из начальных имен те, которые не вошли
    gloss_new = {k: [v] for k, v in gloss_new.items()}
    for k in gloss_new:
        for i in args:
            if i[0] == k and i not in gloss_new[k]:
                gloss_new[k].append(i)
    gloss_fin = sorted(gloss_new.items())  # сортируем
    return gloss_fin


result = thesaurus('Иван', 'Григорий', 'Илья', 'Николай', 'Нина', 'Михаил', 'Игорь')
for key, value in result:
    print(f'{key}: {value}')
# print(thesaurus('Иван', 'Григорий', 'Илья', 'Николай', 'Нина', 'Михаил', 'Игорь')) 
